# Generated by Django 5.0 on 2023-12-21 14:58

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_code', models.CharField(max_length=10, unique=True)),
                ('epub_code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('shared', 'Shared'), ('public', 'Public')], default='private', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('toc', models.TextField(blank=True, default='{}', null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lexiflux.author')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_books', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lexiflux.language')),
            ],
        ),
        migrations.CreateModel(
            name='BookFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_blob', models.BinaryField()),
                ('book', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='original_file', to='lexiflux.book')),
            ],
        ),
        migrations.CreateModel(
            name='ReaderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_readers', to='lexiflux.book')),
                ('native_language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lexiflux.language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='lexiflux.book')),
            ],
            options={
                'ordering': ['number'],
                'unique_together': {('book', 'number')},
            },
        ),
        migrations.CreateModel(
            name='ReadingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.PositiveIntegerField()),
                ('top_word_id', models.PositiveIntegerField()),
                ('last_read_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lexiflux.book')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_progresses', to='lexiflux.readerprofile')),
            ],
            options={
                'unique_together': {('reader', 'book')},
            },
        ),
    ]
