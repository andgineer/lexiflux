
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#
name: CI

env:
  PRIMARY_PYTHON_VERSION: '3.12'
  NODE_VERSION: '21.x'
  PRIMARY_PLATFORM: 'ubuntu-latest'
  PYTEST_CMD: >-
    python -m pytest
    -n auto
    --junitxml=pytest.xml
    --cov-report=term-missing:skip-covered
    --cov-report=lcov:coverage.py.lcov
    --cov=lexiflux
    tests/

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

permissions:
  pull-requests: write
  contents: write

jobs:
  # Test compatibility with the matrix of Python versions and platforms
  matrix-build:
    strategy:
      matrix:
        python-version: [3.11, 3.12]
        # Facebook fastText does not support windows-latest
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv environment
      uses: andgineer/uv-venv@v3
    - name: Install dependencies
      run: uv pip install -r requirements.dev.txt

    - name: Test with pytest without docker
      run: "${{ env.PYTEST_CMD }} -m 'not docker'"

# Build with Docker, publishing Allure report, coverage report
  primary-build:
    runs-on: ubuntu-latest
    concurrency:
      group: github-pages
      cancel-in-progress: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PRIMARY_PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PRIMARY_PYTHON_VERSION }}

    - name: Install uv environment
      uses: andgineer/uv-venv@v3
    - name: Install dependencies
      run: uv pip install -r requirements.dev.txt

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Build scripts
      run: |
        npm install
        npm run build

    - name: Start SeleniumHub
      run: |
        mkdir -p allure-results
        docker compose up -d
        scripts/wait_selenium.sh

    - name: Test with pytest and Allure report
      run: "${{ env.PYTEST_CMD }} --alluredir=./allure-results"

    - name: Test with Jest and Allure report
      run: |
        npm ci
        ALLURE_LABEL_EPIC="viewport.ts" npm test

    - name: Load Allure test report history
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages-dir

    - name: Generate Allure test report
      uses: andgineer/allure-report@v3.6
      id: allure-report
      if: always()
      with:
        allure-results: allure-results
        website: gh-pages-dir
        reports-site-path: builds/tests

    - name: Publish Allure test report
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ always() && (steps.allure-report.outcome == 'success') }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ${{ steps.allure-report.outputs.reports-site }}
        destination_dir: ${{ steps.allure-report.outputs.reports-site-path }}

    - name: Upload coverage data to coveralls.io
      if: always()
      continue-on-error: true
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        files: coverage.py.lcov ./coverage/lcov.info
        format: lcov
        flag-name: unit-tests
        parallel: true

    - name: Finalize coverage reporting to coveralls.io
      if: always()
      continue-on-error: true
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
